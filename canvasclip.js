javascript:(() => {  if (window.canvasRecorder) {    cancelAnimationFrame(window._canvasRAF);    window.canvasRecorder.stop();    window.canvasRecorder = null;    alert("Recording stopped. Saving...");    return;  }  const canvas = document.querySelector("canvas");  if (!canvas) return alert("No canvas found.");  const filename = prompt("Enter filename (without extension):", "canvas");  if (!filename) return;  const outCanvas = Object.assign(document.createElement("canvas"), {    width: canvas.width,    height: canvas.height,    style: "display:none"  });  document.body.appendChild(outCanvas);  const ctx = outCanvas.getContext("2d");  const loop = () => {    ctx.drawImage(canvas, 0, 0);    window._canvasRAF = requestAnimationFrame(loop);  };  loop();  const stream = outCanvas.captureStream(12);  const chunks = [];  const recorder = new MediaRecorder(stream, { mimeType: "video/webm" });  recorder.ondataavailable = e => e.data.size && chunks.push(e.data);  recorder.onstop = () => {    const blob = new Blob(chunks, { type: "video/webm" });    const url = URL.createObjectURL(blob);    const a = Object.assign(document.createElement("a"), {      href: url,      download: filename + ".webm"    });    a.click();    URL.revokeObjectURL(url);    outCanvas.remove();  };  recorder.start();  window.canvasRecorder = recorder;  alert("Recording started (canvas native size, 12 FPS).");  })();